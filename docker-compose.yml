version: '3.8'

services:
  # Frontend service
  frontend:
    build:
      context: ./frontend
    ports:
      - "5173:80"
    environment:
      - VITE_API_URL=http://localhost:8000
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    networks:
      - splitter-network

  # Backend API service
  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
    environment:
      - ENV=development
      - DEBUG=true
      - SPLITTER_URL=http://splitter:9000
      - MINIO_ENDPOINT=minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - MINIO_BUCKET_NAME=stems
      - MINIO_SECURE=false
      - SECRET_KEY=${SECRET_KEY:-supersecretkey}
      - KEYGEN_ACCOUNT_ID=${KEYGEN_ACCOUNT_ID:-}
    volumes:
      - ./backend:/app
    depends_on:
      - minio
      - splitter
    networks:
      - splitter-network

  # Splitter processing service
  splitter:
    build:
      context: ./splitter
    ports:
      - "9000:9000"
    environment:
      - ENV=development
      - DEBUG=true
      - CUDA_VISIBLE_DEVICES=${CUDA_VISIBLE_DEVICES:-}
      - TEMP_DIR=/tmp/splitter_temp
      - OUTPUT_DIR=/tmp/splitter_output
    volumes:
      - ./splitter:/app
      - splitter_temp:/tmp/splitter_temp
      - splitter_output:/tmp/splitter_output
    # Uncomment if using GPU
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]
    networks:
      - splitter-network

  # MinIO object storage
  minio:
    image: minio/minio:RELEASE.2023-08-23T10-48-32Z
    command: server --console-address ":9001" /data
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    volumes:
      - minio_data:/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - splitter-network

  # Create initial MinIO buckets
  createbuckets:
    image: minio/mc:RELEASE.2023-08-18T21-57-55Z
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set myminio http://minio:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD};
      /usr/bin/mc mb --ignore-existing myminio/stems;
      /usr/bin/mc policy set download myminio/stems;
      exit 0;
      "
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    networks:
      - splitter-network

volumes:
  minio_data:
  splitter_temp:
  splitter_output:

networks:
  splitter-network:
    driver: bridge